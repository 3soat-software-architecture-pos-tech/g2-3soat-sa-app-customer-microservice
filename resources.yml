Resources:

  # DynamoDB
  CustomersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Customers
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: cpf
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: CpfIndex
          KeySchema:
            - AttributeName: cpf
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST
  
  NotificationsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Notifications
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: created_at
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: created_at
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
  

  # SQS
  customersNotificationsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: customers-notifications-${file(serverless.yml):provider.stage}.fifo
      VisibilityTimeout: 60
      FifoQueue: True
      MessageRetentionPeriod : 3600
      RedrivePolicy: 
        deadLetterTargetArn: !GetAtt customersNotificationsDLQ.Arn
        maxReceiveCount: 1
  customersNotificationsDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: customers-notificationsDLQ-${file(serverless.yml):provider.stage}.fifo
      VisibilityTimeout: 60
      FifoQueue: True
      MessageRetentionPeriod : 86400


  # IAM Roles
  DefaultRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ${file(serverless.yml):service}-${file(serverless.yml):provider.stage}-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ${file(serverless.yml):service}-${file(serverless.yml):provider.stage}-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - dynamodb:DescribeTable
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                Resource:
                  - ${file(serverless.yml):provider.environment.CUSTOMERS_DYNAMODB_TABLE_ARN}
                  - ${file(serverless.yml):provider.environment.NOTIFICATION_DYNAMODB_TABLE_ARN}
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                Resource:
                  - ${file(serverless.yml):provider.environment.CUSTOMERS_NOTIFICATIONS_ARN}
                  - ${file(serverless.yml):provider.environment.CUSTOMERS_NOTIFICATIONS_DLQ_ARN}